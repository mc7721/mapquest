{
    "id": "6403fbc74a96e5da126d912819399952",
    "name": "MapQuest Search API: Place Search",
    "description": null,
    "auth": null,
    "events": null,
    "variables": [],
    "order": [],
    "folders_order": [],
    "folders": [],
    "requests": [
        {
            "id": "3a87e6941b32707ced1f5e33fad306ff",
            "name": "Search for places with optional geographic and categorical contexts.",
            "url": "httpswww.mapquestapi.com\/\/search\/v4\/place",
            "description": "Get a list of search results ordered by relevance or distance from a spatial reference point, optionally filtered by category, and optionally bounded within a geographic constraint.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "location",
                    "description": "A geographic context used for searching, ranking, and ordering results. Must consist of two comma-separated floating-point values: the longitude, latitude; the first coordinate must lie in the range [-180, 180], and the second must lie in the range [-90, 90]. Note: 'sort=distance' requires a location; if bounding with a circle\/bbox and no location is specified, the center of the circle\/bbox will be used by default.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "category",
                    "description": "The categories of places to search over. Must consist of a comma-separated list of values, specified with 'sic:' followed by the alphanumeric code. Valid codes include any 'sic' values returned by the Search Ahead API, as well as six-digit North American Industry Classification System (NAICS) codes. Required if q is not specified.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "sort",
                    "description": "The scheme used to order results. Must be 'distance' or 'relevance'. Note: 'sort=distance' requires a location; if bounding with a circle\/bbox and no location is specified, the center of the circle\/bbox will be used by default. If a location is detected in the 'q' parameter with 'sort=relevance', the location may influence relevance scoring. 'sort=importance' was available as a sorting option in the initial version of the API, but this option has been deprecated in favor of 'sort=relevance'. 'so",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "feedback",
                    "description": "",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "key",
                    "description": "A valid and authorized MapQuest API key.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "circle",
                    "description": "A geographic circle used to bound the search. Only places within the bound will be returned in results. Must consist of three comma-separated floating-point values: the longitude and latitude of the circle's center, and the radius in meters; the first coordinate must lie in the range [-180, 180], the second must lie in the range [-90, 90], and the radius must lie in the range [0, 800000]. Note: only one of 'circle' and 'bbox' may be specified.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "bbox",
                    "description": "A geographic rectangle used to bound the search. Only places within the bound will be returned in results. Must consist of four comma-separated floating-point values: the longitude and latitude of the lower-left corner followed by the longitude and latitude of the upper-right corner; longitudes must lie in the range [-180, 180], and latitudes must lie in the range [-90, 90]. Note: only one of 'circle' and 'bbox' may be specified.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "corridor",
                    "description": "A collection of points defining a route used for the search. Must consist of two or more arrays of floating-point longitude, latitude values. Longitudes must lie in the range [-180, 180], and latitudes must lie in the range [-90, 90]. Example: [-120.5,10.1],[-119.4,10.3] Note: Corridor cannot be used with 'location' or 'sort=distance'.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "pageSize",
                    "description": "The number of results to return per page. Must lie in the range [1, 50]. Default if unspecified: 10. Note: the starting result number on the requested page must be between 1 and 500, so the maximum allowed value for 'pageSize' could in practice be less than 50, depending on the value of 'page'.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "limit",
                    "description": "(Deprecated.) A synonym for 'pageSize', with the same semantics and constraints. If both 'pageSize' and 'limit' are specified, 'pageSize' takes precedence.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "page",
                    "description": "The page within the result set to return, where 'pageSize' determines the page size. Must lie in the range [1, 500], and the starting result number on the requested page must be between 1 and 500. Default if unspecified: 1.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "q",
                    "description": "A query phrase. Results returned from the Points of Interest dataset will best match the provided query phrase (string) and location (if provided). Required if a category is not specified. Examples: 'Starbucks, Denver CO' or 'hotels'",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "6403fbc74a96e5da126d912819399952",
            "rawModeData": ""
        }
    ]
}